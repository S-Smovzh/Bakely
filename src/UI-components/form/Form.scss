@import "../../css/base/Extensions";

.Form {
  position: relative;
  row-gap: calc(#{$standard} * 2);
  padding: 10px;

  .Form-Button {
    @extend %flex;
    @extend %flex__center;
  }

  .Form-Row {
    grid-template-columns: minmax(10px, 1fr);

    &-Double {
      @extend %grid;
      grid-template-columns: repeat(2, minmax(10px, 1fr));
      grid-template-rows: minmax(10px, 1fr);
      grid-column-gap: calc(#{$standard} * 4);

      .Cell-First {
        grid-area: 1/1/2/2;
        grid-template-columns: minmax(10px, 1fr);
      }

      .Cell-Second {
        grid-area: 1/2/2/3;
        grid-template-columns: minmax(10px, 1fr);
      }
    }
  }

  .Form-TextareaRow {
    grid-template-columns: minmax(10px, 1fr);
    grid-template-rows: 30px 200px 30px;
  }

  .Form-Label {
    grid-area: 1/1/2/2;

    &-Error {
      grid-area: 3/1/4/2;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }
}

@include keyframes(success) {
  0% {
    opacity: 0;
    -moz-opacity: 1;
    z-index: 0;
  }
  50% {
    opacity: 1;
    -moz-opacity: 1;
    stroke-dashoffset: 0;
  }
  100% {
    opacity: 0;
    -moz-opacity: 1;
    z-index: 0;
  }
}

@include keyframes(container__success) {
  0% {
    background: none;
  }
  50% {
    background-color: rgba(0, 0, 0, 0.5);
  }
  100% {
    background: none;
  }
}

.SVG__Container {
  position: absolute;
  top: 0;
  left: 0;
  @include transition(1);
  @include animation(800ms, container__success, ease-in-out, forwards);
}

.Success-Tick {
  width: 200px;
  height: 200px;
  border-radius: 50%;

  & > * {
    animation: 800ms success forwards;
  }
}

.Success-Tick__Circle {
  opacity: 0;
  -moz-opacity: 0;
  stroke-dasharray: 130;
  stroke-dashoffset: 130;
  @include transition(1);
  fill: none;
  stroke: $success-200;
  stroke-width: 3;
  stroke-linejoin: round;
  stroke-miterlimit: 10;
}

.Success-Tick__Check {
  stroke-dasharray: 50;
  stroke-dashoffset: 50;
  -webkit-transition: stroke-dashoffset 1s 0.5s ease-out;
  -moz-transition: stroke-dashoffset 1s 0.5s ease-out;
  -ms-transition: stroke-dashoffset 1s 0.5s ease-out;
  -o-transition: stroke-dashoffset 1s 0.5s ease-out;
  transition: stroke-dashoffset 1s 0.5s ease-out;
  fill: none;
  stroke: $success-200;
  stroke-width: 3;
  stroke-linejoin: round;
  stroke-miterlimit: 10;
}

@media only screen and (min-width: 1400px) {
  .Form-Row {
    grid-template-rows: 30px 46px 30px;

    &-Double {

      .Cell-First {
        grid-template-rows: 30px 46px 30px;
      }

      .Cell-Second {
        grid-template-rows: 30px 46px 30px;
      }
    }
  }
}

@media only screen and (min-width: 1200px) and (max-width: 1399px) {
  .Form-Row {
    grid-template-rows: 30px 42px 30px;

    &-Double {

      .Cell-First {
        grid-template-rows: 30px 42px 30px;
      }

      .Cell-Second {
        grid-template-rows: 30px 42px 30px;
      }
    }
  }
}

@media only screen and (min-width: 992px) and (max-width: 1199px) {
  .Form-Row {
    grid-template-rows: 30px 40px 30px;

    &-Double {

      .Cell-First {
        grid-template-rows: 30px 40px 30px;
      }

      .Cell-Second {
        grid-template-rows: 30px 40px 30px;
      }
    }
  }
}

@media only screen and (min-width: 769px) and (max-width: 991px) {
  .Form-Row {
    grid-template-rows: 30px 38px 30px;

    &-Double {

      .Cell-First {
        grid-template-rows: 30px 38px 30px;
      }

      .Cell-Second {
        grid-template-rows: 30px 38px 30px;
      }
    }
  }
}

@media only screen and (min-width: 481px) and (max-width: 768px) {
  .Form-Row {
    grid-template-rows: 30px 36px 30px;

    &-Double {

      .Cell-First {
        grid-template-rows: 30px 36px 30px;
      }

      .Cell-Second {
        grid-template-rows: 30px 36px 30px;
      }
    }
  }
}

@media only screen and (min-width: 321px) and (max-width: 480px) {
  .Form-Row {
    grid-template-rows: 30px 34px 30px;

    &-Double {

      .Cell-First {
        grid-template-rows: 30px 34px 30px;
      }

      .Cell-Second {
        grid-template-rows: 30px 34px 30px;
      }
    }
  }
}

@media only screen and (max-width: 320px) {
  .Form-Row {
    grid-template-rows: 30px 32px 30px;

    &-Double {

      .Cell-First {
        grid-template-rows: 30px 32px 30px;
      }

      .Cell-Second {
        grid-template-rows: 30px 32px 30px;
      }
    }
  }
}